/* Copyright (C) 2014-2018 by Jacob Alexander
 *
 * This file is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This file is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this file.  If not, see <http://www.gnu.org/licenses/>.
 */

// This file was generated by the kll compiler, DO NOT EDIT.
// Generation Date:    2018-04-05
// KLL Emitter:        kiibohd
// KLL Version:        BETA 0.5c.1528a3eb3c89189d651f31a2f81dab92f63adb2a - 2018-03-24 19:32:10 -0700
// KLL Git Changes:    None
// Compiler arguments:
//      /srv/KiiConf/controller/kll/kll
//    --kiibohd-debug
//    --config
//      /srv/KiiConf/controller/Scan/Devices/ISSILed/capabilities.kll
//      /srv/KiiConf/controller/Scan/Devices/MatrixARMPeriodic/capabilities.kll
//      /srv/KiiConf/controller/Macro/PartialMap/capabilities.kll
//      /srv/KiiConf/controller/Macro/PixelMap/capabilities.kll
//      /srv/KiiConf/controller/Output/HID-IO/capabilities.kll
//      /srv/KiiConf/controller/Output/USB/capabilities.kll
//      /srv/KiiConf/controller/Debug/latency/capabilities.kll
//    --base
//      /srv/KiiConf/controller/Scan/WhiteFox/scancode_map.kll
//      /srv/KiiConf/controller/Scan/WhiteFox/scancode_map.truefox.kll
//    --default
//      /srv/KiiConf/controller/kll/layouts/stdFuncMap.kll
//      WhiteFox-TrueFoxBlank-0.kll
//    --partial
//      /srv/KiiConf/controller/kll/layouts/stdFuncMap.kll
//      WhiteFox-TrueFoxBlank-1.kll
//    --partial
//      /srv/KiiConf/controller/kll/layouts/stdFuncMap.kll
//    --partial
//      /srv/KiiConf/controller/kll/layouts/stdFuncMap.kll
//      WhiteFox-TrueFoxBlank-3.kll
//    --partial
//      /srv/KiiConf/controller/kll/layouts/stdFuncMap.kll
//      WhiteFox-TrueFoxBlank-4.kll
//    --partial
//      /srv/KiiConf/controller/kll/layouts/stdFuncMap.kll
//    --partial
//      /srv/KiiConf/controller/kll/layouts/stdFuncMap.kll
//    --partial
//      /srv/KiiConf/controller/kll/layouts/stdFuncMap.kll
//      WhiteFox-TrueFoxBlank-7.kll
//    --emitter
//      kiibohd
//    --def-template
//      /srv/KiiConf/controller/kll/templates/kiibohdDefs.h
//    --map-template
//      /srv/KiiConf/controller/kll/templates/kiibohdKeymap.h
//    --pixel-template
//      /srv/KiiConf/controller/kll/templates/kiibohdPixelmap.c
//    --def-output
//      kll_defs.h
//    --map-output
//      generatedKeymap.h
//    --pixel-output
//      generatedPixelmap.c
//    --preprocessor-tmp-path
//      /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll
//
// - Configuration File -
//    ISSILedCapabilities
//      /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_Scan_Devices_ISSILed@['capabilities']_processed.kll
//    MatrixARMPeriodicCapabilities
//      /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_Scan_Devices_MatrixARMPeriodic@['capabilities']_processed.kll
//    PartialMapCapabilities
//      /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_Macro_PartialMap@['capabilities']_processed.kll
//    PixelMapCapabilities
//      /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_Macro_PixelMap@['capabilities']_processed.kll
//    HID-IOCapabilities
//      /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_Output_HID-IO@['capabilities']_processed.kll
//    USBCapabilities
//      /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_Output_USB@['capabilities']_processed.kll
//    latency
//      /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_Debug_latency@['capabilities']_processed.kll
// - Generic Files -
// - Base Layer -
//    WhiteFox
//      /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_Scan_WhiteFox@['scancode_map']_processed.kll
//    TrueFox
//      /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_Scan_WhiteFox@['scancode_map', 'truefox']_processed.kll
// - Default Layer -
//    stdFuncMap
//      /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll
//    WhiteFox
//      /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/@['WhiteFox-TrueFoxBlank-0']_processed.kll
// - Partial Layers -
//    Layer 1
//     stdFuncMap
//       /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll
//     WhiteFox
//       /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/@['WhiteFox-TrueFoxBlank-1']_processed.kll
//    Layer 2
//     stdFuncMap
//       /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll
//    Layer 3
//     stdFuncMap
//       /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll
//     WhiteFox
//       /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/@['WhiteFox-TrueFoxBlank-3']_processed.kll
//    Layer 4
//     stdFuncMap
//       /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll
//     WhiteFox
//       /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/@['WhiteFox-TrueFoxBlank-4']_processed.kll
//    Layer 5
//     stdFuncMap
//       /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll
//    Layer 6
//     stdFuncMap
//       /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll
//    Layer 7
//     stdFuncMap
//       /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/_srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll
//     WhiteFox
//       /srv/KiiConf/tmp/57d53315465a10b1ced5350ce7d2c94515ac59157dd65e/tmp_kll/@['WhiteFox-TrueFoxBlank-7']_processed.kll



#pragma once

// ----- Includes -----

// KLL Include
#include <kll.h>



// ----- Capabilities -----

// Capability function declarations
void LED_control_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Layer_layerLatch_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Layer_layerLock_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Layer_layerRotate_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Layer_layerShift_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Layer_layerState_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Macro_testThreadSafe_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Macro_testThreadUnsafe_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Output_consCtrlSend_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Output_flashMode_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Output_kbdProtocolBoot_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Output_kbdProtocolNKRO_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Output_noneSend_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Output_sysCtrlSend_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Output_toggleKbdProtocol_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Output_usbCodeSend_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Output_usbMouse_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Pixel_AnimationControl_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Pixel_AnimationIndex_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Pixel_Animation_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );
void Pixel_Pixel_capability( TriggerMacro *trigger, uint8_t state, uint8_t stateType, uint8_t *args );



// Indexed Capabilities Table
const Capability CapabilitiesList[] = {
	/* 0 ledControl */
	{ LED_control_capability, 2, CapabilityFeature_None },
	/* 1 layerLatch */
	{ Layer_layerLatch_capability, 2, CapabilityFeature_Safe },
	/* 2 layerLock */
	{ Layer_layerLock_capability, 2, CapabilityFeature_Safe },
	/* 3 layerRotate */
	{ Layer_layerRotate_capability, 1, CapabilityFeature_Safe },
	/* 4 layerShift */
	{ Layer_layerShift_capability, 2, CapabilityFeature_Safe },
	/* 5 layerState */
	{ Layer_layerState_capability, 3, CapabilityFeature_Safe },
	/* 6 testThreadSafe */
	{ Macro_testThreadSafe_capability, 0, CapabilityFeature_Safe },
	/* 7 testThreadUnsafe */
	{ Macro_testThreadUnsafe_capability, 0, CapabilityFeature_None },
	/* 8 consCtrlOut */
	{ Output_consCtrlSend_capability, 2, CapabilityFeature_Safe },
	/* 9 flashMode */
	{ Output_flashMode_capability, 0, CapabilityFeature_Safe },
	/* 10 kbdProtocolBoot */
	{ Output_kbdProtocolBoot_capability, 0, CapabilityFeature_None },
	/* 11 kbdProtocolNKRO */
	{ Output_kbdProtocolNKRO_capability, 0, CapabilityFeature_None },
	/* 12 noneOut */
	{ Output_noneSend_capability, 0, CapabilityFeature_Safe },
	/* 13 sysCtrlOut */
	{ Output_sysCtrlSend_capability, 1, CapabilityFeature_Safe },
	/* 14 toggleKbdProtocol */
	{ Output_toggleKbdProtocol_capability, 0, CapabilityFeature_None },
	/* 15 usbKeyOut */
	{ Output_usbCodeSend_capability, 1, CapabilityFeature_Safe },
	/* 16 mouseOut */
	{ Output_usbMouse_capability, 6, CapabilityFeature_Safe },
	/* 17 animation_control */
	{ Pixel_AnimationControl_capability, 1, CapabilityFeature_None },
	/* 18 animationIndex */
	{ Pixel_AnimationIndex_capability, 2, CapabilityFeature_None },
	/* 19 animation */
	{ Pixel_Animation_capability, 7, CapabilityFeature_None },
	/* 20 pixel */
	{ Pixel_Pixel_capability, 0, CapabilityFeature_None },
};


// -- Result Macros

// Result Macro Guides
Guide_RM( 0 ) = { 1, 8, 111, 0, 0 }; // (HID(ConsCode)"CONSUMER_BRIGHTNESS_INCREMENT")
Guide_RM( 1 ) = { 1, 8, 112, 0, 0 }; // (HID(ConsCode)"CONSUMER_BRIGHTNESS_DECREMENT")
Guide_RM( 2 ) = { 1, 8, 176, 0, 0 }; // (HID(ConsCode)"CONSUMER_PLAY")
Guide_RM( 3 ) = { 1, 8, 177, 0, 0 }; // (HID(ConsCode)"CONSUMER_PAUSE")
Guide_RM( 4 ) = { 1, 8, 181, 0, 0 }; // (HID(ConsCode)"CONSUMER_SCAN_NEXT_TRACK")
Guide_RM( 5 ) = { 1, 8, 182, 0, 0 }; // (HID(ConsCode)"CONSUMER_SCAN_PREVIOUS_TRACK")
Guide_RM( 6 ) = { 1, 8, 226, 0, 0 }; // (HID(ConsCode)"CONSUMER_MUTE")
Guide_RM( 7 ) = { 1, 8, 233, 0, 0 }; // (HID(ConsCode)"CONSUMER_VOLUME_UP")
Guide_RM( 8 ) = { 1, 8, 234, 0, 0 }; // (HID(ConsCode)"CONSUMER_VOLUME_DOWN")
Guide_RM( 9 ) = { 1, 8, 38, 2, 0 }; // (HID(ConsCode)"AC_STOP")
Guide_RM( 10 ) = { 1, 15, 0x00, 0 }; // (None)
Guide_RM( 11 ) = { 1, 13, SYS_SLEEP, 0 }; // (HID(SysCode)"SYS_SLEEP")
Guide_RM( 12 ) = { 1, 15, KEY_A, 0 }; // (HID(USBCode)"KEY_A")
Guide_RM( 13 ) = { 1, 15, KEY_B, 0 }; // (HID(USBCode)"KEY_B")
Guide_RM( 14 ) = { 1, 15, KEY_C, 0 }; // (HID(USBCode)"KEY_C")
Guide_RM( 15 ) = { 1, 15, KEY_D, 0 }; // (HID(USBCode)"KEY_D")
Guide_RM( 16 ) = { 1, 15, KEY_E, 0 }; // (HID(USBCode)"KEY_E")
Guide_RM( 17 ) = { 1, 15, KEY_F, 0 }; // (HID(USBCode)"KEY_F")
Guide_RM( 18 ) = { 1, 15, KEY_G, 0 }; // (HID(USBCode)"KEY_G")
Guide_RM( 19 ) = { 1, 15, KEY_H, 0 }; // (HID(USBCode)"KEY_H")
Guide_RM( 20 ) = { 1, 15, KEY_I, 0 }; // (HID(USBCode)"KEY_I")
Guide_RM( 21 ) = { 1, 15, KEY_J, 0 }; // (HID(USBCode)"KEY_J")
Guide_RM( 22 ) = { 1, 15, KEY_K, 0 }; // (HID(USBCode)"KEY_K")
Guide_RM( 23 ) = { 1, 15, KEY_L, 0 }; // (HID(USBCode)"KEY_L")
Guide_RM( 24 ) = { 1, 15, KEY_M, 0 }; // (HID(USBCode)"KEY_M")
Guide_RM( 25 ) = { 1, 15, KEY_N, 0 }; // (HID(USBCode)"KEY_N")
Guide_RM( 26 ) = { 1, 15, KEY_O, 0 }; // (HID(USBCode)"KEY_O")
Guide_RM( 27 ) = { 1, 15, KEY_P, 0 }; // (HID(USBCode)"KEY_P")
Guide_RM( 28 ) = { 1, 15, KEY_Q, 0 }; // (HID(USBCode)"KEY_Q")
Guide_RM( 29 ) = { 1, 15, KEY_R, 0 }; // (HID(USBCode)"KEY_R")
Guide_RM( 30 ) = { 1, 15, KEY_S, 0 }; // (HID(USBCode)"KEY_S")
Guide_RM( 31 ) = { 1, 15, KEY_T, 0 }; // (HID(USBCode)"KEY_T")
Guide_RM( 32 ) = { 1, 15, KEY_U, 0 }; // (HID(USBCode)"KEY_U")
Guide_RM( 33 ) = { 1, 15, KEY_V, 0 }; // (HID(USBCode)"KEY_V")
Guide_RM( 34 ) = { 1, 15, KEY_W, 0 }; // (HID(USBCode)"KEY_W")
Guide_RM( 35 ) = { 1, 15, KEY_X, 0 }; // (HID(USBCode)"KEY_X")
Guide_RM( 36 ) = { 1, 15, KEY_Y, 0 }; // (HID(USBCode)"KEY_Y")
Guide_RM( 37 ) = { 1, 15, KEY_Z, 0 }; // (HID(USBCode)"KEY_Z")
Guide_RM( 38 ) = { 1, 15, KEY_1, 0 }; // (HID(USBCode)"KEY_1")
Guide_RM( 39 ) = { 1, 15, KEY_2, 0 }; // (HID(USBCode)"KEY_2")
Guide_RM( 40 ) = { 1, 15, KEY_3, 0 }; // (HID(USBCode)"KEY_3")
Guide_RM( 41 ) = { 1, 15, KEY_4, 0 }; // (HID(USBCode)"KEY_4")
Guide_RM( 42 ) = { 1, 15, KEY_5, 0 }; // (HID(USBCode)"KEY_5")
Guide_RM( 43 ) = { 1, 15, KEY_6, 0 }; // (HID(USBCode)"KEY_6")
Guide_RM( 44 ) = { 1, 15, KEY_7, 0 }; // (HID(USBCode)"KEY_7")
Guide_RM( 45 ) = { 1, 15, KEY_8, 0 }; // (HID(USBCode)"KEY_8")
Guide_RM( 46 ) = { 1, 15, KEY_9, 0 }; // (HID(USBCode)"KEY_9")
Guide_RM( 47 ) = { 1, 15, KEY_0, 0 }; // (HID(USBCode)"KEY_0")
Guide_RM( 48 ) = { 1, 15, KEY_ENTER, 0 }; // (HID(USBCode)"KEY_ENTER")
Guide_RM( 49 ) = { 1, 15, KEY_ESC, 0 }; // (HID(USBCode)"KEY_ESC")
Guide_RM( 50 ) = { 1, 15, KEY_TAB, 0 }; // (HID(USBCode)"KEY_TAB")
Guide_RM( 51 ) = { 1, 15, KEY_SPACE, 0 }; // (HID(USBCode)"KEY_SPACE")
Guide_RM( 52 ) = { 1, 15, KEY_MINUS, 0 }; // (HID(USBCode)"KEY_MINUS")
Guide_RM( 53 ) = { 1, 15, KEY_EQUAL, 0 }; // (HID(USBCode)"KEY_EQUAL")
Guide_RM( 54 ) = { 1, 15, KEY_LEFT_BRACKET, 0 }; // (HID(USBCode)"KEY_LEFT_BRACKET")
Guide_RM( 55 ) = { 1, 15, KEY_RIGHT_BRACKET, 0 }; // (HID(USBCode)"KEY_RIGHT_BRACKET")
Guide_RM( 56 ) = { 1, 15, KEY_BACKSLASH, 0 }; // (HID(USBCode)"KEY_BACKSLASH")
Guide_RM( 57 ) = { 1, 15, KEY_SEMICOLON, 0 }; // (HID(USBCode)"KEY_SEMICOLON")
Guide_RM( 58 ) = { 1, 15, KEY_QUOTE, 0 }; // (HID(USBCode)"KEY_QUOTE")
Guide_RM( 59 ) = { 1, 15, KEY_BACKTICK, 0 }; // (HID(USBCode)"KEY_BACKTICK")
Guide_RM( 60 ) = { 1, 15, KEY_COMMA, 0 }; // (HID(USBCode)"KEY_COMMA")
Guide_RM( 61 ) = { 1, 15, KEY_PERIOD, 0 }; // (HID(USBCode)"KEY_PERIOD")
Guide_RM( 62 ) = { 1, 15, KEY_SLASH, 0 }; // (HID(USBCode)"KEY_SLASH")
Guide_RM( 63 ) = { 1, 15, KEY_F1, 0 }; // (HID(USBCode)"KEY_F1")
Guide_RM( 64 ) = { 1, 15, KEY_F2, 0 }; // (HID(USBCode)"KEY_F2")
Guide_RM( 65 ) = { 1, 15, KEY_F3, 0 }; // (HID(USBCode)"KEY_F3")
Guide_RM( 66 ) = { 1, 15, KEY_F4, 0 }; // (HID(USBCode)"KEY_F4")
Guide_RM( 67 ) = { 1, 15, KEY_F5, 0 }; // (HID(USBCode)"KEY_F5")
Guide_RM( 68 ) = { 1, 15, KEY_F6, 0 }; // (HID(USBCode)"KEY_F6")
Guide_RM( 69 ) = { 1, 15, KEY_F7, 0 }; // (HID(USBCode)"KEY_F7")
Guide_RM( 70 ) = { 1, 15, KEY_F8, 0 }; // (HID(USBCode)"KEY_F8")
Guide_RM( 71 ) = { 1, 15, KEY_F9, 0 }; // (HID(USBCode)"KEY_F9")
Guide_RM( 72 ) = { 1, 15, KEY_F10, 0 }; // (HID(USBCode)"KEY_F10")
Guide_RM( 73 ) = { 1, 15, KEY_HOME, 0 }; // (HID(USBCode)"KEY_HOME")
Guide_RM( 74 ) = { 1, 15, KEY_PAGE_UP, 0 }; // (HID(USBCode)"KEY_PAGE_UP")
Guide_RM( 75 ) = { 1, 15, KEY_DELETE, 0 }; // (HID(USBCode)"KEY_DELETE")
Guide_RM( 76 ) = { 1, 15, KEY_END, 0 }; // (HID(USBCode)"KEY_END")
Guide_RM( 77 ) = { 1, 15, KEY_PAGE_DOWN, 0 }; // (HID(USBCode)"KEY_PAGE_DOWN")
Guide_RM( 78 ) = { 1, 15, KEY_RIGHT, 0 }; // (HID(USBCode)"KEY_RIGHT")
Guide_RM( 79 ) = { 1, 15, KEY_LEFT, 0 }; // (HID(USBCode)"KEY_LEFT")
Guide_RM( 80 ) = { 1, 15, KEY_DOWN, 0 }; // (HID(USBCode)"KEY_DOWN")
Guide_RM( 81 ) = { 1, 15, KEY_UP, 0 }; // (HID(USBCode)"KEY_UP")
Guide_RM( 82 ) = { 1, 15, KEY_LCTRL, 0 }; // (HID(USBCode)"KEY_LCTRL")
Guide_RM( 83 ) = { 1, 15, KEY_LSHIFT, 0 }; // (HID(USBCode)"KEY_LSHIFT")
Guide_RM( 84 ) = { 2, 15, KEY_LSHIFT, 15, KEY_1, 0 }; // (HID(USBCode)"KEY_LSHIFT" + HID(USBCode)"KEY_1")
Guide_RM( 85 ) = { 1, 15, KEY_LALT, 0 }; // (HID(USBCode)"KEY_LALT")
Guide_RM( 86 ) = { 1, 15, KEY_LGUI, 0 }; // (HID(USBCode)"KEY_LGUI")
Guide_RM( 87 ) = { 1, 15, KEY_RSHIFT, 0 }; // (HID(USBCode)"KEY_RSHIFT")
Guide_RM( 88 ) = { 1, 15, KEY_RALT, 0 }; // (HID(USBCode)"KEY_RALT")
Guide_RM( 89 ) = { 1, 15, KEY_RGUI, 0 }; // (HID(USBCode)"KEY_RGUI")
Guide_RM( 90 ) = { 1, 1, 1, 0, 0 }; // (layerLatch(1))
Guide_RM( 91 ) = { 1, 1, 2, 0, 0 }; // (layerLatch(2))
Guide_RM( 92 ) = { 1, 2, 3, 0, 0 }; // (layerLock(3))
Guide_RM( 93 ) = { 1, 4, 1, 0, 0 }; // (layerShift(1))
Guide_RM( 94 ) = { 1, 4, 4, 0, 0 }; // (layerShift(4))


// -- Result Macro List

// Indexed Table of Result Macros
const ResultMacro ResultMacroList[] = {
	Define_RM( 0 ), // (HID(ConsCode)"CONSUMER_BRIGHTNESS_INCREMENT")
	Define_RM( 1 ), // (HID(ConsCode)"CONSUMER_BRIGHTNESS_DECREMENT")
	Define_RM( 2 ), // (HID(ConsCode)"CONSUMER_PLAY")
	Define_RM( 3 ), // (HID(ConsCode)"CONSUMER_PAUSE")
	Define_RM( 4 ), // (HID(ConsCode)"CONSUMER_SCAN_NEXT_TRACK")
	Define_RM( 5 ), // (HID(ConsCode)"CONSUMER_SCAN_PREVIOUS_TRACK")
	Define_RM( 6 ), // (HID(ConsCode)"CONSUMER_MUTE")
	Define_RM( 7 ), // (HID(ConsCode)"CONSUMER_VOLUME_UP")
	Define_RM( 8 ), // (HID(ConsCode)"CONSUMER_VOLUME_DOWN")
	Define_RM( 9 ), // (HID(ConsCode)"AC_STOP")
	Define_RM( 10 ), // (None)
	Define_RM( 11 ), // (HID(SysCode)"SYS_SLEEP")
	Define_RM( 12 ), // (HID(USBCode)"KEY_A")
	Define_RM( 13 ), // (HID(USBCode)"KEY_B")
	Define_RM( 14 ), // (HID(USBCode)"KEY_C")
	Define_RM( 15 ), // (HID(USBCode)"KEY_D")
	Define_RM( 16 ), // (HID(USBCode)"KEY_E")
	Define_RM( 17 ), // (HID(USBCode)"KEY_F")
	Define_RM( 18 ), // (HID(USBCode)"KEY_G")
	Define_RM( 19 ), // (HID(USBCode)"KEY_H")
	Define_RM( 20 ), // (HID(USBCode)"KEY_I")
	Define_RM( 21 ), // (HID(USBCode)"KEY_J")
	Define_RM( 22 ), // (HID(USBCode)"KEY_K")
	Define_RM( 23 ), // (HID(USBCode)"KEY_L")
	Define_RM( 24 ), // (HID(USBCode)"KEY_M")
	Define_RM( 25 ), // (HID(USBCode)"KEY_N")
	Define_RM( 26 ), // (HID(USBCode)"KEY_O")
	Define_RM( 27 ), // (HID(USBCode)"KEY_P")
	Define_RM( 28 ), // (HID(USBCode)"KEY_Q")
	Define_RM( 29 ), // (HID(USBCode)"KEY_R")
	Define_RM( 30 ), // (HID(USBCode)"KEY_S")
	Define_RM( 31 ), // (HID(USBCode)"KEY_T")
	Define_RM( 32 ), // (HID(USBCode)"KEY_U")
	Define_RM( 33 ), // (HID(USBCode)"KEY_V")
	Define_RM( 34 ), // (HID(USBCode)"KEY_W")
	Define_RM( 35 ), // (HID(USBCode)"KEY_X")
	Define_RM( 36 ), // (HID(USBCode)"KEY_Y")
	Define_RM( 37 ), // (HID(USBCode)"KEY_Z")
	Define_RM( 38 ), // (HID(USBCode)"KEY_1")
	Define_RM( 39 ), // (HID(USBCode)"KEY_2")
	Define_RM( 40 ), // (HID(USBCode)"KEY_3")
	Define_RM( 41 ), // (HID(USBCode)"KEY_4")
	Define_RM( 42 ), // (HID(USBCode)"KEY_5")
	Define_RM( 43 ), // (HID(USBCode)"KEY_6")
	Define_RM( 44 ), // (HID(USBCode)"KEY_7")
	Define_RM( 45 ), // (HID(USBCode)"KEY_8")
	Define_RM( 46 ), // (HID(USBCode)"KEY_9")
	Define_RM( 47 ), // (HID(USBCode)"KEY_0")
	Define_RM( 48 ), // (HID(USBCode)"KEY_ENTER")
	Define_RM( 49 ), // (HID(USBCode)"KEY_ESC")
	Define_RM( 50 ), // (HID(USBCode)"KEY_TAB")
	Define_RM( 51 ), // (HID(USBCode)"KEY_SPACE")
	Define_RM( 52 ), // (HID(USBCode)"KEY_MINUS")
	Define_RM( 53 ), // (HID(USBCode)"KEY_EQUAL")
	Define_RM( 54 ), // (HID(USBCode)"KEY_LEFT_BRACKET")
	Define_RM( 55 ), // (HID(USBCode)"KEY_RIGHT_BRACKET")
	Define_RM( 56 ), // (HID(USBCode)"KEY_BACKSLASH")
	Define_RM( 57 ), // (HID(USBCode)"KEY_SEMICOLON")
	Define_RM( 58 ), // (HID(USBCode)"KEY_QUOTE")
	Define_RM( 59 ), // (HID(USBCode)"KEY_BACKTICK")
	Define_RM( 60 ), // (HID(USBCode)"KEY_COMMA")
	Define_RM( 61 ), // (HID(USBCode)"KEY_PERIOD")
	Define_RM( 62 ), // (HID(USBCode)"KEY_SLASH")
	Define_RM( 63 ), // (HID(USBCode)"KEY_F1")
	Define_RM( 64 ), // (HID(USBCode)"KEY_F2")
	Define_RM( 65 ), // (HID(USBCode)"KEY_F3")
	Define_RM( 66 ), // (HID(USBCode)"KEY_F4")
	Define_RM( 67 ), // (HID(USBCode)"KEY_F5")
	Define_RM( 68 ), // (HID(USBCode)"KEY_F6")
	Define_RM( 69 ), // (HID(USBCode)"KEY_F7")
	Define_RM( 70 ), // (HID(USBCode)"KEY_F8")
	Define_RM( 71 ), // (HID(USBCode)"KEY_F9")
	Define_RM( 72 ), // (HID(USBCode)"KEY_F10")
	Define_RM( 73 ), // (HID(USBCode)"KEY_HOME")
	Define_RM( 74 ), // (HID(USBCode)"KEY_PAGE_UP")
	Define_RM( 75 ), // (HID(USBCode)"KEY_DELETE")
	Define_RM( 76 ), // (HID(USBCode)"KEY_END")
	Define_RM( 77 ), // (HID(USBCode)"KEY_PAGE_DOWN")
	Define_RM( 78 ), // (HID(USBCode)"KEY_RIGHT")
	Define_RM( 79 ), // (HID(USBCode)"KEY_LEFT")
	Define_RM( 80 ), // (HID(USBCode)"KEY_DOWN")
	Define_RM( 81 ), // (HID(USBCode)"KEY_UP")
	Define_RM( 82 ), // (HID(USBCode)"KEY_LCTRL")
	Define_RM( 83 ), // (HID(USBCode)"KEY_LSHIFT")
	Define_RM( 84 ), // (HID(USBCode)"KEY_LSHIFT" + HID(USBCode)"KEY_1")
	Define_RM( 85 ), // (HID(USBCode)"KEY_LALT")
	Define_RM( 86 ), // (HID(USBCode)"KEY_LGUI")
	Define_RM( 87 ), // (HID(USBCode)"KEY_RSHIFT")
	Define_RM( 88 ), // (HID(USBCode)"KEY_RALT")
	Define_RM( 89 ), // (HID(USBCode)"KEY_RGUI")
	Define_RM( 90 ), // (layerLatch(1))
	Define_RM( 91 ), // (layerLatch(2))
	Define_RM( 92 ), // (layerLock(3))
	Define_RM( 93 ), // (layerShift(1))
	Define_RM( 94 ), // (layerShift(4))
};


// -- Trigger Macros

// Trigger Macro Guides
Guide_TM( 0 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x01, 0 }; // (S001)
Guide_TM( 1 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x02, 0 }; // (S002)
Guide_TM( 2 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x03, 0 }; // (S003)
Guide_TM( 3 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x04, 0 }; // (S004)
Guide_TM( 4 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x05, 0 }; // (S005)
Guide_TM( 5 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x06, 0 }; // (S006)
Guide_TM( 6 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x07, 0 }; // (S007)
Guide_TM( 7 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x08, 0 }; // (S008)
Guide_TM( 8 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x09, 0 }; // (S009)
Guide_TM( 9 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x0A, 0 }; // (S010)
Guide_TM( 10 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x0B, 0 }; // (S011)
Guide_TM( 11 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x0C, 0 }; // (S012)
Guide_TM( 12 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x0D, 0 }; // (S013)
Guide_TM( 13 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x0E, 0 }; // (S014)
Guide_TM( 14 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x0F, 0 }; // (S015)
Guide_TM( 15 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x10, 0 }; // (S016)
Guide_TM( 16 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x11, 0 }; // (S017)
Guide_TM( 17 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x12, 0 }; // (S018)
Guide_TM( 18 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x13, 0 }; // (S019)
Guide_TM( 19 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x14, 0 }; // (S020)
Guide_TM( 20 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x15, 0 }; // (S021)
Guide_TM( 21 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x16, 0 }; // (S022)
Guide_TM( 22 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x17, 0 }; // (S023)
Guide_TM( 23 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x18, 0 }; // (S024)
Guide_TM( 24 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x19, 0 }; // (S025)
Guide_TM( 25 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x1A, 0 }; // (S026)
Guide_TM( 26 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x1B, 0 }; // (S027)
Guide_TM( 27 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x1C, 0 }; // (S028)
Guide_TM( 28 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x1D, 0 }; // (S029)
Guide_TM( 29 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x1E, 0 }; // (S030)
Guide_TM( 30 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x1F, 0 }; // (S031)
Guide_TM( 31 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x20, 0 }; // (S032)
Guide_TM( 32 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x21, 0 }; // (S033)
Guide_TM( 33 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x22, 0 }; // (S034)
Guide_TM( 34 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x23, 0 }; // (S035)
Guide_TM( 35 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x24, 0 }; // (S036)
Guide_TM( 36 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x25, 0 }; // (S037)
Guide_TM( 37 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x26, 0 }; // (S038)
Guide_TM( 38 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x27, 0 }; // (S039)
Guide_TM( 39 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x28, 0 }; // (S040)
Guide_TM( 40 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x29, 0 }; // (S041)
Guide_TM( 41 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x2A, 0 }; // (S042)
Guide_TM( 42 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x2B, 0 }; // (S043)
Guide_TM( 43 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x2D, 0 }; // (S045)
Guide_TM( 44 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x2E, 0 }; // (S046)
Guide_TM( 45 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x2F, 0 }; // (S047)
Guide_TM( 46 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x31, 0 }; // (S049)
Guide_TM( 47 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x32, 0 }; // (S050)
Guide_TM( 48 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x33, 0 }; // (S051)
Guide_TM( 49 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x34, 0 }; // (S052)
Guide_TM( 50 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x35, 0 }; // (S053)
Guide_TM( 51 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x36, 0 }; // (S054)
Guide_TM( 52 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x37, 0 }; // (S055)
Guide_TM( 53 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x38, 0 }; // (S056)
Guide_TM( 54 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x39, 0 }; // (S057)
Guide_TM( 55 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x3A, 0 }; // (S058)
Guide_TM( 56 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x3B, 0 }; // (S059)
Guide_TM( 57 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x3C, 0 }; // (S060)
Guide_TM( 58 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x3D, 0 }; // (S061)
Guide_TM( 59 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x3E, 0 }; // (S062)
Guide_TM( 60 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x3F, 0 }; // (S063)
Guide_TM( 61 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x40, 0 }; // (S064)
Guide_TM( 62 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x41, 0 }; // (S065)
Guide_TM( 63 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x42, 0 }; // (S066)
Guide_TM( 64 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x43, 0 }; // (S067)
Guide_TM( 65 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x45, 0 }; // (S069)
Guide_TM( 66 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x46, 0 }; // (S070)
Guide_TM( 67 ) = { 1, TriggerType_Switch1, ScheduleType_P, 0x47, 0 }; // (S071)


// -- Trigger Macro List

// Indexed Table of Trigger Macros
const TriggerMacro TriggerMacroList[] = {
	/* 0 */ Define_TM( 0, 59 ), // (S001) : (HID(USBCode)"KEY_BACKTICK");
	/* 1 */ Define_TM( 1, 1 ), // (S002) : (HID(ConsCode)"CONSUMER_BRIGHTNESS_DECREMENT");
	/* 2 */ Define_TM( 1, 63 ), // (S002) : (HID(USBCode)"KEY_F1");
	/* 3 */ Define_TM( 1, 38 ), // (S002) : (HID(USBCode)"KEY_1");
	/* 4 */ Define_TM( 2, 39 ), // (S003) : (HID(USBCode)"KEY_2");
	/* 5 */ Define_TM( 2, 64 ), // (S003) : (HID(USBCode)"KEY_F2");
	/* 6 */ Define_TM( 2, 0 ), // (S003) : (HID(ConsCode)"CONSUMER_BRIGHTNESS_INCREMENT");
	/* 7 */ Define_TM( 3, 65 ), // (S004) : (HID(USBCode)"KEY_F3");
	/* 8 */ Define_TM( 3, 40 ), // (S004) : (HID(USBCode)"KEY_3");
	/* 9 */ Define_TM( 4, 41 ), // (S005) : (HID(USBCode)"KEY_4");
	/* 10 */ Define_TM( 4, 66 ), // (S005) : (HID(USBCode)"KEY_F4");
	/* 11 */ Define_TM( 5, 42 ), // (S006) : (HID(USBCode)"KEY_5");
	/* 12 */ Define_TM( 5, 67 ), // (S006) : (HID(USBCode)"KEY_F5");
	/* 13 */ Define_TM( 6, 68 ), // (S007) : (HID(USBCode)"KEY_F6");
	/* 14 */ Define_TM( 6, 43 ), // (S007) : (HID(USBCode)"KEY_6");
	/* 15 */ Define_TM( 7, 69 ), // (S008) : (HID(USBCode)"KEY_F7");
	/* 16 */ Define_TM( 7, 44 ), // (S008) : (HID(USBCode)"KEY_7");
	/* 17 */ Define_TM( 8, 70 ), // (S009) : (HID(USBCode)"KEY_F8");
	/* 18 */ Define_TM( 8, 45 ), // (S009) : (HID(USBCode)"KEY_8");
	/* 19 */ Define_TM( 9, 71 ), // (S010) : (HID(USBCode)"KEY_F9");
	/* 20 */ Define_TM( 9, 46 ), // (S010) : (HID(USBCode)"KEY_9");
	/* 21 */ Define_TM( 10, 72 ), // (S011) : (HID(USBCode)"KEY_F10");
	/* 22 */ Define_TM( 10, 84 ), // (S011) : (HID(USBCode)"KEY_LSHIFT" + HID(USBCode)"KEY_1");
	/* 23 */ Define_TM( 10, 47 ), // (S011) : (HID(USBCode)"KEY_0");
	/* 24 */ Define_TM( 10, 6 ), // (S011) : (HID(ConsCode)"CONSUMER_MUTE");
	/* 25 */ Define_TM( 11, 8 ), // (S012) : (HID(ConsCode)"CONSUMER_VOLUME_DOWN");
	/* 26 */ Define_TM( 11, 52 ), // (S012) : (HID(USBCode)"KEY_MINUS");
	/* 27 */ Define_TM( 12, 53 ), // (S013) : (HID(USBCode)"KEY_EQUAL");
	/* 28 */ Define_TM( 12, 7 ), // (S013) : (HID(ConsCode)"CONSUMER_VOLUME_UP");
	/* 29 */ Define_TM( 13, 90 ), // (S014) : (layerLatch(1));
	/* 30 */ Define_TM( 13, 2 ), // (S014) : (HID(ConsCode)"CONSUMER_PLAY");
	/* 31 */ Define_TM( 14, 3 ), // (S015) : (HID(ConsCode)"CONSUMER_PAUSE");
	/* 32 */ Define_TM( 14, 75 ), // (S015) : (HID(USBCode)"KEY_DELETE");
	/* 33 */ Define_TM( 15, 49 ), // (S016) : (HID(USBCode)"KEY_ESC");
	/* 34 */ Define_TM( 16, 50 ), // (S017) : (HID(USBCode)"KEY_TAB");
	/* 35 */ Define_TM( 17, 28 ), // (S018) : (HID(USBCode)"KEY_Q");
	/* 36 */ Define_TM( 18, 34 ), // (S019) : (HID(USBCode)"KEY_W");
	/* 37 */ Define_TM( 19, 16 ), // (S020) : (HID(USBCode)"KEY_E");
	/* 38 */ Define_TM( 20, 29 ), // (S021) : (HID(USBCode)"KEY_R");
	/* 39 */ Define_TM( 21, 31 ), // (S022) : (HID(USBCode)"KEY_T");
	/* 40 */ Define_TM( 22, 36 ), // (S023) : (HID(USBCode)"KEY_Y");
	/* 41 */ Define_TM( 23, 32 ), // (S024) : (HID(USBCode)"KEY_U");
	/* 42 */ Define_TM( 24, 20 ), // (S025) : (HID(USBCode)"KEY_I");
	/* 43 */ Define_TM( 25, 26 ), // (S026) : (HID(USBCode)"KEY_O");
	/* 44 */ Define_TM( 26, 27 ), // (S027) : (HID(USBCode)"KEY_P");
	/* 45 */ Define_TM( 27, 54 ), // (S028) : (HID(USBCode)"KEY_LEFT_BRACKET");
	/* 46 */ Define_TM( 27, 5 ), // (S028) : (HID(ConsCode)"CONSUMER_SCAN_PREVIOUS_TRACK");
	/* 47 */ Define_TM( 28, 4 ), // (S029) : (HID(ConsCode)"CONSUMER_SCAN_NEXT_TRACK");
	/* 48 */ Define_TM( 28, 55 ), // (S029) : (HID(USBCode)"KEY_RIGHT_BRACKET");
	/* 49 */ Define_TM( 29, 10 ), // (S030) : (None);
	/* 50 */ Define_TM( 29, 56 ), // (S030) : (HID(USBCode)"KEY_BACKSLASH");
	/* 51 */ Define_TM( 30, 9 ), // (S031) : (HID(ConsCode)"AC_STOP");
	/* 52 */ Define_TM( 30, 91 ), // (S031) : (layerLatch(2));
	/* 53 */ Define_TM( 30, 10 ), // (S031) : (None);
	/* 54 */ Define_TM( 31, 82 ), // (S032) : (HID(USBCode)"KEY_LCTRL");
	/* 55 */ Define_TM( 32, 12 ), // (S033) : (HID(USBCode)"KEY_A");
	/* 56 */ Define_TM( 33, 30 ), // (S034) : (HID(USBCode)"KEY_S");
	/* 57 */ Define_TM( 34, 15 ), // (S035) : (HID(USBCode)"KEY_D");
	/* 58 */ Define_TM( 35, 17 ), // (S036) : (HID(USBCode)"KEY_F");
	/* 59 */ Define_TM( 36, 18 ), // (S037) : (HID(USBCode)"KEY_G");
	/* 60 */ Define_TM( 37, 79 ), // (S038) : (HID(USBCode)"KEY_LEFT");
	/* 61 */ Define_TM( 37, 19 ), // (S038) : (HID(USBCode)"KEY_H");
	/* 62 */ Define_TM( 37, 73 ), // (S038) : (HID(USBCode)"KEY_HOME");
	/* 63 */ Define_TM( 38, 80 ), // (S039) : (HID(USBCode)"KEY_DOWN");
	/* 64 */ Define_TM( 38, 77 ), // (S039) : (HID(USBCode)"KEY_PAGE_DOWN");
	/* 65 */ Define_TM( 38, 21 ), // (S039) : (HID(USBCode)"KEY_J");
	/* 66 */ Define_TM( 39, 22 ), // (S040) : (HID(USBCode)"KEY_K");
	/* 67 */ Define_TM( 39, 74 ), // (S040) : (HID(USBCode)"KEY_PAGE_UP");
	/* 68 */ Define_TM( 39, 81 ), // (S040) : (HID(USBCode)"KEY_UP");
	/* 69 */ Define_TM( 40, 76 ), // (S041) : (HID(USBCode)"KEY_END");
	/* 70 */ Define_TM( 40, 78 ), // (S041) : (HID(USBCode)"KEY_RIGHT");
	/* 71 */ Define_TM( 40, 23 ), // (S041) : (HID(USBCode)"KEY_L");
	/* 72 */ Define_TM( 41, 57 ), // (S042) : (HID(USBCode)"KEY_SEMICOLON");
	/* 73 */ Define_TM( 42, 58 ), // (S043) : (HID(USBCode)"KEY_QUOTE");
	/* 74 */ Define_TM( 43, 48 ), // (S045) : (HID(USBCode)"KEY_ENTER");
	/* 75 */ Define_TM( 44, 74 ), // (S046) : (HID(USBCode)"KEY_PAGE_UP");
	/* 76 */ Define_TM( 45, 83 ), // (S047) : (HID(USBCode)"KEY_LSHIFT");
	/* 77 */ Define_TM( 46, 37 ), // (S049) : (HID(USBCode)"KEY_Z");
	/* 78 */ Define_TM( 47, 35 ), // (S050) : (HID(USBCode)"KEY_X");
	/* 79 */ Define_TM( 48, 14 ), // (S051) : (HID(USBCode)"KEY_C");
	/* 80 */ Define_TM( 49, 33 ), // (S052) : (HID(USBCode)"KEY_V");
	/* 81 */ Define_TM( 50, 13 ), // (S053) : (HID(USBCode)"KEY_B");
	/* 82 */ Define_TM( 51, 25 ), // (S054) : (HID(USBCode)"KEY_N");
	/* 83 */ Define_TM( 52, 24 ), // (S055) : (HID(USBCode)"KEY_M");
	/* 84 */ Define_TM( 53, 60 ), // (S056) : (HID(USBCode)"KEY_COMMA");
	/* 85 */ Define_TM( 54, 61 ), // (S057) : (HID(USBCode)"KEY_PERIOD");
	/* 86 */ Define_TM( 55, 62 ), // (S058) : (HID(USBCode)"KEY_SLASH");
	/* 87 */ Define_TM( 56, 87 ), // (S059) : (HID(USBCode)"KEY_RSHIFT");
	/* 88 */ Define_TM( 57, 81 ), // (S060) : (HID(USBCode)"KEY_UP");
	/* 89 */ Define_TM( 57, 74 ), // (S060) : (HID(USBCode)"KEY_PAGE_UP");
	/* 90 */ Define_TM( 58, 11 ), // (S061) : (HID(SysCode)"SYS_SLEEP");
	/* 91 */ Define_TM( 58, 92 ), // (S061) : (layerLock(3));
	/* 92 */ Define_TM( 58, 77 ), // (S061) : (HID(USBCode)"KEY_PAGE_DOWN");
	/* 93 */ Define_TM( 59, 94 ), // (S062) : (layerShift(4));
	/* 94 */ Define_TM( 59, 93 ), // (S062) : (layerShift(1));
	/* 95 */ Define_TM( 60, 85 ), // (S063) : (HID(USBCode)"KEY_LALT");
	/* 96 */ Define_TM( 61, 86 ), // (S064) : (HID(USBCode)"KEY_LGUI");
	/* 97 */ Define_TM( 62, 51 ), // (S065) : (HID(USBCode)"KEY_SPACE");
	/* 98 */ Define_TM( 63, 89 ), // (S066) : (HID(USBCode)"KEY_RGUI");
	/* 99 */ Define_TM( 64, 88 ), // (S067) : (HID(USBCode)"KEY_RALT");
	/* 100 */ Define_TM( 64, 93 ), // (S067) : (layerShift(1));
	/* 101 */ Define_TM( 65, 79 ), // (S069) : (HID(USBCode)"KEY_LEFT");
	/* 102 */ Define_TM( 65, 73 ), // (S069) : (HID(USBCode)"KEY_HOME");
	/* 103 */ Define_TM( 66, 77 ), // (S070) : (HID(USBCode)"KEY_PAGE_DOWN");
	/* 104 */ Define_TM( 66, 80 ), // (S070) : (HID(USBCode)"KEY_DOWN");
	/* 105 */ Define_TM( 67, 76 ), // (S071) : (HID(USBCode)"KEY_END");
	/* 106 */ Define_TM( 67, 78 ), // (S071) : (HID(USBCode)"KEY_RIGHT");
};


// -- Trigger Macro Record List

// Keeps a record/state of each trigger macro
TriggerMacroRecord TriggerMacroRecordList[ TriggerMacroNum ];



// ----- Trigger Maps -----

// MaxScanCode
// - This is retrieved from the KLL configuration
// - Should be corollated with the max scan code in the scan module
// - Maximum value is 0x100 (0x0 to 0xFF)
// - Increasing it beyond the keyboard's capabilities is just a waste of ram...
#define MaxScanCode 0x47

// -- Trigger Lists
//
// Index 0: # of triggers in list
// Index n: pointer to trigger macro - use tm() macro

// - Default Layer -
Define_TL( default, 0x00 ) = { 0 };
Define_TL( default, 0x01 ) = { 1, 0 };
Define_TL( default, 0x02 ) = { 1, 3 };
Define_TL( default, 0x03 ) = { 1, 4 };
Define_TL( default, 0x04 ) = { 1, 8 };
Define_TL( default, 0x05 ) = { 1, 9 };
Define_TL( default, 0x06 ) = { 1, 11 };
Define_TL( default, 0x07 ) = { 1, 14 };
Define_TL( default, 0x08 ) = { 1, 16 };
Define_TL( default, 0x09 ) = { 1, 18 };
Define_TL( default, 0x0A ) = { 1, 20 };
Define_TL( default, 0x0B ) = { 1, 23 };
Define_TL( default, 0x0C ) = { 1, 26 };
Define_TL( default, 0x0D ) = { 1, 27 };
Define_TL( default, 0x0E ) = { 1, 29 };
Define_TL( default, 0x0F ) = { 1, 32 };
Define_TL( default, 0x10 ) = { 1, 33 };
Define_TL( default, 0x11 ) = { 1, 34 };
Define_TL( default, 0x12 ) = { 1, 35 };
Define_TL( default, 0x13 ) = { 1, 36 };
Define_TL( default, 0x14 ) = { 1, 37 };
Define_TL( default, 0x15 ) = { 1, 38 };
Define_TL( default, 0x16 ) = { 1, 39 };
Define_TL( default, 0x17 ) = { 1, 40 };
Define_TL( default, 0x18 ) = { 1, 41 };
Define_TL( default, 0x19 ) = { 1, 42 };
Define_TL( default, 0x1A ) = { 1, 43 };
Define_TL( default, 0x1B ) = { 1, 44 };
Define_TL( default, 0x1C ) = { 1, 45 };
Define_TL( default, 0x1D ) = { 1, 48 };
Define_TL( default, 0x1E ) = { 1, 50 };
Define_TL( default, 0x1F ) = { 1, 52 };
Define_TL( default, 0x20 ) = { 1, 54 };
Define_TL( default, 0x21 ) = { 1, 55 };
Define_TL( default, 0x22 ) = { 1, 56 };
Define_TL( default, 0x23 ) = { 1, 57 };
Define_TL( default, 0x24 ) = { 1, 58 };
Define_TL( default, 0x25 ) = { 1, 59 };
Define_TL( default, 0x26 ) = { 1, 61 };
Define_TL( default, 0x27 ) = { 1, 65 };
Define_TL( default, 0x28 ) = { 1, 66 };
Define_TL( default, 0x29 ) = { 1, 71 };
Define_TL( default, 0x2A ) = { 1, 72 };
Define_TL( default, 0x2B ) = { 1, 73 };
Define_TL( default, 0x2C ) = { 0 };
Define_TL( default, 0x2D ) = { 1, 74 };
Define_TL( default, 0x2E ) = { 1, 75 };
Define_TL( default, 0x2F ) = { 1, 76 };
Define_TL( default, 0x30 ) = { 0 };
Define_TL( default, 0x31 ) = { 1, 77 };
Define_TL( default, 0x32 ) = { 1, 78 };
Define_TL( default, 0x33 ) = { 1, 79 };
Define_TL( default, 0x34 ) = { 1, 80 };
Define_TL( default, 0x35 ) = { 1, 81 };
Define_TL( default, 0x36 ) = { 1, 82 };
Define_TL( default, 0x37 ) = { 1, 83 };
Define_TL( default, 0x38 ) = { 1, 84 };
Define_TL( default, 0x39 ) = { 1, 85 };
Define_TL( default, 0x3A ) = { 1, 86 };
Define_TL( default, 0x3B ) = { 1, 87 };
Define_TL( default, 0x3C ) = { 1, 88 };
Define_TL( default, 0x3D ) = { 1, 92 };
Define_TL( default, 0x3E ) = { 1, 94 };
Define_TL( default, 0x3F ) = { 1, 95 };
Define_TL( default, 0x40 ) = { 1, 96 };
Define_TL( default, 0x41 ) = { 1, 97 };
Define_TL( default, 0x42 ) = { 1, 98 };
Define_TL( default, 0x43 ) = { 1, 99 };
Define_TL( default, 0x44 ) = { 0 };
Define_TL( default, 0x45 ) = { 1, 101 };
Define_TL( default, 0x46 ) = { 1, 104 };
Define_TL( default, 0x47 ) = { 1, 106 };


// - Partial Layers -
// Partial Layer 1
Define_TL( layer1, 0x00 ) = { 1, 1 };
Define_TL( layer1, 0x01 ) = { 1, 6 };
Define_TL( layer1, 0x02 ) = { 0 };
Define_TL( layer1, 0x03 ) = { 0 };
Define_TL( layer1, 0x04 ) = { 0 };
Define_TL( layer1, 0x05 ) = { 0 };
Define_TL( layer1, 0x06 ) = { 0 };
Define_TL( layer1, 0x07 ) = { 0 };
Define_TL( layer1, 0x08 ) = { 0 };
Define_TL( layer1, 0x09 ) = { 1, 24 };
Define_TL( layer1, 0x0A ) = { 1, 25 };
Define_TL( layer1, 0x0B ) = { 1, 28 };
Define_TL( layer1, 0x0C ) = { 0 };
Define_TL( layer1, 0x0D ) = { 0 };
Define_TL( layer1, 0x0E ) = { 0 };
Define_TL( layer1, 0x0F ) = { 0 };
Define_TL( layer1, 0x10 ) = { 0 };
Define_TL( layer1, 0x11 ) = { 0 };
Define_TL( layer1, 0x12 ) = { 0 };
Define_TL( layer1, 0x13 ) = { 0 };
Define_TL( layer1, 0x14 ) = { 0 };
Define_TL( layer1, 0x15 ) = { 0 };
Define_TL( layer1, 0x16 ) = { 0 };
Define_TL( layer1, 0x17 ) = { 0 };
Define_TL( layer1, 0x18 ) = { 0 };
Define_TL( layer1, 0x19 ) = { 0 };
Define_TL( layer1, 0x1A ) = { 0 };
Define_TL( layer1, 0x1B ) = { 0 };
Define_TL( layer1, 0x1C ) = { 0 };
Define_TL( layer1, 0x1D ) = { 0 };
Define_TL( layer1, 0x1E ) = { 0 };
Define_TL( layer1, 0x1F ) = { 0 };
Define_TL( layer1, 0x20 ) = { 0 };
Define_TL( layer1, 0x21 ) = { 0 };
Define_TL( layer1, 0x22 ) = { 0 };
Define_TL( layer1, 0x23 ) = { 0 };
Define_TL( layer1, 0x24 ) = { 0 };
Define_TL( layer1, 0x25 ) = { 0 };
Define_TL( layer1, 0x26 ) = { 0 };
Define_TL( layer1, 0x27 ) = { 0 };
Define_TL( layer1, 0x28 ) = { 0 };
Define_TL( layer1, 0x29 ) = { 0 };
Define_TL( layer1, 0x2A ) = { 0 };
Define_TL( layer1, 0x2B ) = { 0 };
Define_TL( layer1, 0x2C ) = { 0 };
Define_TL( layer1, 0x2D ) = { 0 };
Define_TL( layer1, 0x2E ) = { 0 };
Define_TL( layer1, 0x2F ) = { 0 };
Define_TL( layer1, 0x30 ) = { 0 };
Define_TL( layer1, 0x31 ) = { 0 };
Define_TL( layer1, 0x32 ) = { 0 };
Define_TL( layer1, 0x33 ) = { 0 };
Define_TL( layer1, 0x34 ) = { 0 };
Define_TL( layer1, 0x35 ) = { 0 };
Define_TL( layer1, 0x36 ) = { 0 };
Define_TL( layer1, 0x37 ) = { 0 };
Define_TL( layer1, 0x38 ) = { 0 };
Define_TL( layer1, 0x39 ) = { 0 };
Define_TL( layer1, 0x3A ) = { 1, 89 };
Define_TL( layer1, 0x3B ) = { 1, 90 };
Define_TL( layer1, 0x3C ) = { 0 };
Define_TL( layer1, 0x3D ) = { 0 };
Define_TL( layer1, 0x3E ) = { 0 };
Define_TL( layer1, 0x3F ) = { 0 };
Define_TL( layer1, 0x40 ) = { 0 };
Define_TL( layer1, 0x41 ) = { 1, 100 };
Define_TL( layer1, 0x42 ) = { 0 };
Define_TL( layer1, 0x43 ) = { 1, 102 };
Define_TL( layer1, 0x44 ) = { 1, 103 };
Define_TL( layer1, 0x45 ) = { 1, 105 };

// Partial Layer 2
Define_TL( layer2, 0x00 ) = { 1, 100 };

// Partial Layer 3
Define_TL( layer3, 0x00 ) = { 1, 3 };
Define_TL( layer3, 0x01 ) = { 1, 4 };
Define_TL( layer3, 0x02 ) = { 1, 8 };
Define_TL( layer3, 0x03 ) = { 1, 9 };
Define_TL( layer3, 0x04 ) = { 1, 11 };
Define_TL( layer3, 0x05 ) = { 1, 14 };
Define_TL( layer3, 0x06 ) = { 1, 16 };
Define_TL( layer3, 0x07 ) = { 1, 18 };
Define_TL( layer3, 0x08 ) = { 1, 20 };
Define_TL( layer3, 0x09 ) = { 1, 22 };
Define_TL( layer3, 0x0A ) = { 1, 25 };
Define_TL( layer3, 0x0B ) = { 1, 28 };
Define_TL( layer3, 0x0C ) = { 1, 30 };
Define_TL( layer3, 0x0D ) = { 1, 31 };
Define_TL( layer3, 0x0E ) = { 0 };
Define_TL( layer3, 0x0F ) = { 0 };
Define_TL( layer3, 0x10 ) = { 0 };
Define_TL( layer3, 0x11 ) = { 0 };
Define_TL( layer3, 0x12 ) = { 0 };
Define_TL( layer3, 0x13 ) = { 0 };
Define_TL( layer3, 0x14 ) = { 0 };
Define_TL( layer3, 0x15 ) = { 0 };
Define_TL( layer3, 0x16 ) = { 0 };
Define_TL( layer3, 0x17 ) = { 0 };
Define_TL( layer3, 0x18 ) = { 0 };
Define_TL( layer3, 0x19 ) = { 0 };
Define_TL( layer3, 0x1A ) = { 1, 46 };
Define_TL( layer3, 0x1B ) = { 1, 47 };
Define_TL( layer3, 0x1C ) = { 0 };
Define_TL( layer3, 0x1D ) = { 1, 51 };
Define_TL( layer3, 0x1E ) = { 0 };
Define_TL( layer3, 0x1F ) = { 0 };
Define_TL( layer3, 0x20 ) = { 0 };
Define_TL( layer3, 0x21 ) = { 0 };
Define_TL( layer3, 0x22 ) = { 0 };
Define_TL( layer3, 0x23 ) = { 0 };
Define_TL( layer3, 0x24 ) = { 1, 60 };
Define_TL( layer3, 0x25 ) = { 1, 63 };
Define_TL( layer3, 0x26 ) = { 1, 68 };
Define_TL( layer3, 0x27 ) = { 1, 70 };
Define_TL( layer3, 0x28 ) = { 0 };
Define_TL( layer3, 0x29 ) = { 0 };
Define_TL( layer3, 0x2A ) = { 0 };
Define_TL( layer3, 0x2B ) = { 0 };
Define_TL( layer3, 0x2C ) = { 0 };
Define_TL( layer3, 0x2D ) = { 0 };
Define_TL( layer3, 0x2E ) = { 0 };
Define_TL( layer3, 0x2F ) = { 0 };
Define_TL( layer3, 0x30 ) = { 0 };
Define_TL( layer3, 0x31 ) = { 0 };
Define_TL( layer3, 0x32 ) = { 0 };
Define_TL( layer3, 0x33 ) = { 0 };
Define_TL( layer3, 0x34 ) = { 0 };
Define_TL( layer3, 0x35 ) = { 0 };
Define_TL( layer3, 0x36 ) = { 0 };
Define_TL( layer3, 0x37 ) = { 0 };
Define_TL( layer3, 0x38 ) = { 0 };
Define_TL( layer3, 0x39 ) = { 0 };
Define_TL( layer3, 0x3A ) = { 0 };
Define_TL( layer3, 0x3B ) = { 1, 91 };
Define_TL( layer3, 0x3C ) = { 1, 93 };
Define_TL( layer3, 0x3D ) = { 0 };
Define_TL( layer3, 0x3E ) = { 0 };
Define_TL( layer3, 0x3F ) = { 0 };
Define_TL( layer3, 0x40 ) = { 0 };
Define_TL( layer3, 0x41 ) = { 1, 100 };

// Partial Layer 4
Define_TL( layer4, 0x00 ) = { 1, 2 };
Define_TL( layer4, 0x01 ) = { 1, 5 };
Define_TL( layer4, 0x02 ) = { 1, 7 };
Define_TL( layer4, 0x03 ) = { 1, 10 };
Define_TL( layer4, 0x04 ) = { 1, 12 };
Define_TL( layer4, 0x05 ) = { 1, 13 };
Define_TL( layer4, 0x06 ) = { 1, 15 };
Define_TL( layer4, 0x07 ) = { 1, 17 };
Define_TL( layer4, 0x08 ) = { 1, 19 };
Define_TL( layer4, 0x09 ) = { 1, 21 };
Define_TL( layer4, 0x0A ) = { 0 };
Define_TL( layer4, 0x0B ) = { 0 };
Define_TL( layer4, 0x0C ) = { 0 };
Define_TL( layer4, 0x0D ) = { 0 };
Define_TL( layer4, 0x0E ) = { 0 };
Define_TL( layer4, 0x0F ) = { 0 };
Define_TL( layer4, 0x10 ) = { 0 };
Define_TL( layer4, 0x11 ) = { 0 };
Define_TL( layer4, 0x12 ) = { 0 };
Define_TL( layer4, 0x13 ) = { 0 };
Define_TL( layer4, 0x14 ) = { 0 };
Define_TL( layer4, 0x15 ) = { 0 };
Define_TL( layer4, 0x16 ) = { 0 };
Define_TL( layer4, 0x17 ) = { 0 };
Define_TL( layer4, 0x18 ) = { 0 };
Define_TL( layer4, 0x19 ) = { 0 };
Define_TL( layer4, 0x1A ) = { 0 };
Define_TL( layer4, 0x1B ) = { 0 };
Define_TL( layer4, 0x1C ) = { 0 };
Define_TL( layer4, 0x1D ) = { 0 };
Define_TL( layer4, 0x1E ) = { 0 };
Define_TL( layer4, 0x1F ) = { 0 };
Define_TL( layer4, 0x20 ) = { 0 };
Define_TL( layer4, 0x21 ) = { 0 };
Define_TL( layer4, 0x22 ) = { 0 };
Define_TL( layer4, 0x23 ) = { 0 };
Define_TL( layer4, 0x24 ) = { 1, 62 };
Define_TL( layer4, 0x25 ) = { 1, 64 };
Define_TL( layer4, 0x26 ) = { 1, 67 };
Define_TL( layer4, 0x27 ) = { 1, 69 };
Define_TL( layer4, 0x28 ) = { 0 };
Define_TL( layer4, 0x29 ) = { 0 };
Define_TL( layer4, 0x2A ) = { 0 };
Define_TL( layer4, 0x2B ) = { 0 };
Define_TL( layer4, 0x2C ) = { 0 };
Define_TL( layer4, 0x2D ) = { 0 };
Define_TL( layer4, 0x2E ) = { 0 };
Define_TL( layer4, 0x2F ) = { 0 };
Define_TL( layer4, 0x30 ) = { 0 };
Define_TL( layer4, 0x31 ) = { 0 };
Define_TL( layer4, 0x32 ) = { 0 };
Define_TL( layer4, 0x33 ) = { 0 };
Define_TL( layer4, 0x34 ) = { 0 };
Define_TL( layer4, 0x35 ) = { 0 };
Define_TL( layer4, 0x36 ) = { 0 };
Define_TL( layer4, 0x37 ) = { 0 };
Define_TL( layer4, 0x38 ) = { 0 };
Define_TL( layer4, 0x39 ) = { 0 };
Define_TL( layer4, 0x3A ) = { 1, 89 };
Define_TL( layer4, 0x3B ) = { 1, 90 };
Define_TL( layer4, 0x3C ) = { 0 };
Define_TL( layer4, 0x3D ) = { 0 };
Define_TL( layer4, 0x3E ) = { 0 };
Define_TL( layer4, 0x3F ) = { 0 };
Define_TL( layer4, 0x40 ) = { 0 };
Define_TL( layer4, 0x41 ) = { 1, 100 };
Define_TL( layer4, 0x42 ) = { 0 };
Define_TL( layer4, 0x43 ) = { 1, 102 };
Define_TL( layer4, 0x44 ) = { 1, 103 };
Define_TL( layer4, 0x45 ) = { 1, 105 };

// Partial Layer 5
Define_TL( layer5, 0x00 ) = { 1, 100 };

// Partial Layer 6
Define_TL( layer6, 0x00 ) = { 1, 100 };

// Partial Layer 7
Define_TL( layer7, 0x00 ) = { 1, 49 };
Define_TL( layer7, 0x01 ) = { 1, 53 };
Define_TL( layer7, 0x02 ) = { 0 };
Define_TL( layer7, 0x03 ) = { 0 };
Define_TL( layer7, 0x04 ) = { 0 };
Define_TL( layer7, 0x05 ) = { 0 };
Define_TL( layer7, 0x06 ) = { 0 };
Define_TL( layer7, 0x07 ) = { 0 };
Define_TL( layer7, 0x08 ) = { 0 };
Define_TL( layer7, 0x09 ) = { 0 };
Define_TL( layer7, 0x0A ) = { 0 };
Define_TL( layer7, 0x0B ) = { 0 };
Define_TL( layer7, 0x0C ) = { 0 };
Define_TL( layer7, 0x0D ) = { 0 };
Define_TL( layer7, 0x0E ) = { 0 };
Define_TL( layer7, 0x0F ) = { 0 };
Define_TL( layer7, 0x10 ) = { 0 };
Define_TL( layer7, 0x11 ) = { 0 };
Define_TL( layer7, 0x12 ) = { 0 };
Define_TL( layer7, 0x13 ) = { 0 };
Define_TL( layer7, 0x14 ) = { 0 };
Define_TL( layer7, 0x15 ) = { 0 };
Define_TL( layer7, 0x16 ) = { 0 };
Define_TL( layer7, 0x17 ) = { 0 };
Define_TL( layer7, 0x18 ) = { 0 };
Define_TL( layer7, 0x19 ) = { 0 };
Define_TL( layer7, 0x1A ) = { 0 };
Define_TL( layer7, 0x1B ) = { 0 };
Define_TL( layer7, 0x1C ) = { 0 };
Define_TL( layer7, 0x1D ) = { 0 };
Define_TL( layer7, 0x1E ) = { 0 };
Define_TL( layer7, 0x1F ) = { 0 };
Define_TL( layer7, 0x20 ) = { 0 };
Define_TL( layer7, 0x21 ) = { 0 };
Define_TL( layer7, 0x22 ) = { 0 };
Define_TL( layer7, 0x23 ) = { 0 };
Define_TL( layer7, 0x24 ) = { 0 };
Define_TL( layer7, 0x25 ) = { 1, 100 };


// -- ScanCode Offset Map
// Maps interconnect ids to scancode offsets
//
// Only used for keyboards with an interconnect
const uint8_t InterconnectOffsetList[] = {
	0x00,
	0x47,
};


// -- ScanCode Indexed Maps
// Maps to a trigger list of macro pointers
//                 _
// <scan code> -> |T|
//                |r| -> <trigger macro pointer 1>
//                |i|
//                |g| -> <trigger macro pointer 2>
//                |g|
//                |e| -> <trigger macro pointer 3>
//                |r|
//                |s| -> <trigger macro pointer n>
//                 -

// - Default Map for ScanCode Lookup -
const nat_ptr_t *default_scanMap[] = { 
default_tl_0x00, default_tl_0x01, default_tl_0x02, default_tl_0x03, default_tl_0x04, default_tl_0x05, default_tl_0x06, default_tl_0x07, default_tl_0x08, default_tl_0x09, default_tl_0x0A, default_tl_0x0B, default_tl_0x0C, default_tl_0x0D, default_tl_0x0E, default_tl_0x0F, default_tl_0x10, default_tl_0x11, default_tl_0x12, default_tl_0x13, default_tl_0x14, default_tl_0x15, default_tl_0x16, default_tl_0x17, default_tl_0x18, default_tl_0x19, default_tl_0x1A, default_tl_0x1B, default_tl_0x1C, default_tl_0x1D, default_tl_0x1E, default_tl_0x1F, default_tl_0x20, default_tl_0x21, default_tl_0x22, default_tl_0x23, default_tl_0x24, default_tl_0x25, default_tl_0x26, default_tl_0x27, default_tl_0x28, default_tl_0x29, default_tl_0x2A, default_tl_0x2B, default_tl_0x2C, default_tl_0x2D, default_tl_0x2E, default_tl_0x2F, default_tl_0x30, default_tl_0x31, default_tl_0x32, default_tl_0x33, default_tl_0x34, default_tl_0x35, default_tl_0x36, default_tl_0x37, default_tl_0x38, default_tl_0x39, default_tl_0x3A, default_tl_0x3B, default_tl_0x3C, default_tl_0x3D, default_tl_0x3E, default_tl_0x3F, default_tl_0x40, default_tl_0x41, default_tl_0x42, default_tl_0x43, default_tl_0x44, default_tl_0x45, default_tl_0x46, default_tl_0x47
};


// - Partial Layer ScanCode Lookup Maps -
// Partial Layer 1
const nat_ptr_t *layer1_scanMap[] = { 
layer1_tl_0x00, layer1_tl_0x01, layer1_tl_0x02, layer1_tl_0x03, layer1_tl_0x04, layer1_tl_0x05, layer1_tl_0x06, layer1_tl_0x07, layer1_tl_0x08, layer1_tl_0x09, layer1_tl_0x0A, layer1_tl_0x0B, layer1_tl_0x0C, layer1_tl_0x0D, layer1_tl_0x0E, layer1_tl_0x0F, layer1_tl_0x10, layer1_tl_0x11, layer1_tl_0x12, layer1_tl_0x13, layer1_tl_0x14, layer1_tl_0x15, layer1_tl_0x16, layer1_tl_0x17, layer1_tl_0x18, layer1_tl_0x19, layer1_tl_0x1A, layer1_tl_0x1B, layer1_tl_0x1C, layer1_tl_0x1D, layer1_tl_0x1E, layer1_tl_0x1F, layer1_tl_0x20, layer1_tl_0x21, layer1_tl_0x22, layer1_tl_0x23, layer1_tl_0x24, layer1_tl_0x25, layer1_tl_0x26, layer1_tl_0x27, layer1_tl_0x28, layer1_tl_0x29, layer1_tl_0x2A, layer1_tl_0x2B, layer1_tl_0x2C, layer1_tl_0x2D, layer1_tl_0x2E, layer1_tl_0x2F, layer1_tl_0x30, layer1_tl_0x31, layer1_tl_0x32, layer1_tl_0x33, layer1_tl_0x34, layer1_tl_0x35, layer1_tl_0x36, layer1_tl_0x37, layer1_tl_0x38, layer1_tl_0x39, layer1_tl_0x3A, layer1_tl_0x3B, layer1_tl_0x3C, layer1_tl_0x3D, layer1_tl_0x3E, layer1_tl_0x3F, layer1_tl_0x40, layer1_tl_0x41, layer1_tl_0x42, layer1_tl_0x43, layer1_tl_0x44, layer1_tl_0x45
};

// Partial Layer 2
const nat_ptr_t *layer2_scanMap[] = { 
layer2_tl_0x00
};

// Partial Layer 3
const nat_ptr_t *layer3_scanMap[] = { 
layer3_tl_0x00, layer3_tl_0x01, layer3_tl_0x02, layer3_tl_0x03, layer3_tl_0x04, layer3_tl_0x05, layer3_tl_0x06, layer3_tl_0x07, layer3_tl_0x08, layer3_tl_0x09, layer3_tl_0x0A, layer3_tl_0x0B, layer3_tl_0x0C, layer3_tl_0x0D, layer3_tl_0x0E, layer3_tl_0x0F, layer3_tl_0x10, layer3_tl_0x11, layer3_tl_0x12, layer3_tl_0x13, layer3_tl_0x14, layer3_tl_0x15, layer3_tl_0x16, layer3_tl_0x17, layer3_tl_0x18, layer3_tl_0x19, layer3_tl_0x1A, layer3_tl_0x1B, layer3_tl_0x1C, layer3_tl_0x1D, layer3_tl_0x1E, layer3_tl_0x1F, layer3_tl_0x20, layer3_tl_0x21, layer3_tl_0x22, layer3_tl_0x23, layer3_tl_0x24, layer3_tl_0x25, layer3_tl_0x26, layer3_tl_0x27, layer3_tl_0x28, layer3_tl_0x29, layer3_tl_0x2A, layer3_tl_0x2B, layer3_tl_0x2C, layer3_tl_0x2D, layer3_tl_0x2E, layer3_tl_0x2F, layer3_tl_0x30, layer3_tl_0x31, layer3_tl_0x32, layer3_tl_0x33, layer3_tl_0x34, layer3_tl_0x35, layer3_tl_0x36, layer3_tl_0x37, layer3_tl_0x38, layer3_tl_0x39, layer3_tl_0x3A, layer3_tl_0x3B, layer3_tl_0x3C, layer3_tl_0x3D, layer3_tl_0x3E, layer3_tl_0x3F, layer3_tl_0x40, layer3_tl_0x41
};

// Partial Layer 4
const nat_ptr_t *layer4_scanMap[] = { 
layer4_tl_0x00, layer4_tl_0x01, layer4_tl_0x02, layer4_tl_0x03, layer4_tl_0x04, layer4_tl_0x05, layer4_tl_0x06, layer4_tl_0x07, layer4_tl_0x08, layer4_tl_0x09, layer4_tl_0x0A, layer4_tl_0x0B, layer4_tl_0x0C, layer4_tl_0x0D, layer4_tl_0x0E, layer4_tl_0x0F, layer4_tl_0x10, layer4_tl_0x11, layer4_tl_0x12, layer4_tl_0x13, layer4_tl_0x14, layer4_tl_0x15, layer4_tl_0x16, layer4_tl_0x17, layer4_tl_0x18, layer4_tl_0x19, layer4_tl_0x1A, layer4_tl_0x1B, layer4_tl_0x1C, layer4_tl_0x1D, layer4_tl_0x1E, layer4_tl_0x1F, layer4_tl_0x20, layer4_tl_0x21, layer4_tl_0x22, layer4_tl_0x23, layer4_tl_0x24, layer4_tl_0x25, layer4_tl_0x26, layer4_tl_0x27, layer4_tl_0x28, layer4_tl_0x29, layer4_tl_0x2A, layer4_tl_0x2B, layer4_tl_0x2C, layer4_tl_0x2D, layer4_tl_0x2E, layer4_tl_0x2F, layer4_tl_0x30, layer4_tl_0x31, layer4_tl_0x32, layer4_tl_0x33, layer4_tl_0x34, layer4_tl_0x35, layer4_tl_0x36, layer4_tl_0x37, layer4_tl_0x38, layer4_tl_0x39, layer4_tl_0x3A, layer4_tl_0x3B, layer4_tl_0x3C, layer4_tl_0x3D, layer4_tl_0x3E, layer4_tl_0x3F, layer4_tl_0x40, layer4_tl_0x41, layer4_tl_0x42, layer4_tl_0x43, layer4_tl_0x44, layer4_tl_0x45
};

// Partial Layer 5
const nat_ptr_t *layer5_scanMap[] = { 
layer5_tl_0x00
};

// Partial Layer 6
const nat_ptr_t *layer6_scanMap[] = { 
layer6_tl_0x00
};

// Partial Layer 7
const nat_ptr_t *layer7_scanMap[] = { 
layer7_tl_0x00, layer7_tl_0x01, layer7_tl_0x02, layer7_tl_0x03, layer7_tl_0x04, layer7_tl_0x05, layer7_tl_0x06, layer7_tl_0x07, layer7_tl_0x08, layer7_tl_0x09, layer7_tl_0x0A, layer7_tl_0x0B, layer7_tl_0x0C, layer7_tl_0x0D, layer7_tl_0x0E, layer7_tl_0x0F, layer7_tl_0x10, layer7_tl_0x11, layer7_tl_0x12, layer7_tl_0x13, layer7_tl_0x14, layer7_tl_0x15, layer7_tl_0x16, layer7_tl_0x17, layer7_tl_0x18, layer7_tl_0x19, layer7_tl_0x1A, layer7_tl_0x1B, layer7_tl_0x1C, layer7_tl_0x1D, layer7_tl_0x1E, layer7_tl_0x1F, layer7_tl_0x20, layer7_tl_0x21, layer7_tl_0x22, layer7_tl_0x23, layer7_tl_0x24, layer7_tl_0x25
};



// ----- Layer Index -----

// -- Layer Index List
//
// Index 0: Default map
// Index n: Additional layers
const Layer LayerIndex[] = {
	Layer_IN( default_scanMap, "D: _srv_KiiConf_controller_Scan_Devices_ISSILed@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_Devices_MatrixARMPeriodic@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PartialMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PixelMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_HID-IO@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_USB@['capabilities']_processed.kll + _srv_KiiConf_controller_Debug_latency@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map', 'truefox']_processed.kll + _srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll + @['WhiteFox-TrueFoxBlank-0']_processed.kll", 0x00 ),
	Layer_IN( layer1_scanMap, "1: _srv_KiiConf_controller_Scan_Devices_ISSILed@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_Devices_MatrixARMPeriodic@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PartialMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PixelMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_HID-IO@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_USB@['capabilities']_processed.kll + _srv_KiiConf_controller_Debug_latency@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map', 'truefox']_processed.kll + _srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll + @['WhiteFox-TrueFoxBlank-1']_processed.kll", 0x02 ),
	Layer_IN( layer2_scanMap, "2: _srv_KiiConf_controller_Scan_Devices_ISSILed@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_Devices_MatrixARMPeriodic@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PartialMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PixelMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_HID-IO@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_USB@['capabilities']_processed.kll + _srv_KiiConf_controller_Debug_latency@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map', 'truefox']_processed.kll + _srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll", 0x43 ),
	Layer_IN( layer3_scanMap, "3: _srv_KiiConf_controller_Scan_Devices_ISSILed@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_Devices_MatrixARMPeriodic@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PartialMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PixelMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_HID-IO@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_USB@['capabilities']_processed.kll + _srv_KiiConf_controller_Debug_latency@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map', 'truefox']_processed.kll + _srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll + @['WhiteFox-TrueFoxBlank-3']_processed.kll", 0x02 ),
	Layer_IN( layer4_scanMap, "4: _srv_KiiConf_controller_Scan_Devices_ISSILed@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_Devices_MatrixARMPeriodic@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PartialMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PixelMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_HID-IO@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_USB@['capabilities']_processed.kll + _srv_KiiConf_controller_Debug_latency@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map', 'truefox']_processed.kll + _srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll + @['WhiteFox-TrueFoxBlank-4']_processed.kll", 0x02 ),
	Layer_IN( layer5_scanMap, "5: _srv_KiiConf_controller_Scan_Devices_ISSILed@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_Devices_MatrixARMPeriodic@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PartialMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PixelMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_HID-IO@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_USB@['capabilities']_processed.kll + _srv_KiiConf_controller_Debug_latency@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map', 'truefox']_processed.kll + _srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll", 0x43 ),
	Layer_IN( layer6_scanMap, "6: _srv_KiiConf_controller_Scan_Devices_ISSILed@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_Devices_MatrixARMPeriodic@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PartialMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PixelMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_HID-IO@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_USB@['capabilities']_processed.kll + _srv_KiiConf_controller_Debug_latency@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map', 'truefox']_processed.kll + _srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll", 0x43 ),
	Layer_IN( layer7_scanMap, "7: _srv_KiiConf_controller_Scan_Devices_ISSILed@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_Devices_MatrixARMPeriodic@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PartialMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Macro_PixelMap@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_HID-IO@['capabilities']_processed.kll + _srv_KiiConf_controller_Output_USB@['capabilities']_processed.kll + _srv_KiiConf_controller_Debug_latency@['capabilities']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map']_processed.kll + _srv_KiiConf_controller_Scan_WhiteFox@['scancode_map', 'truefox']_processed.kll + _srv_KiiConf_controller_kll_layouts@['stdFuncMap']_processed.kll + @['WhiteFox-TrueFoxBlank-7']_processed.kll", 0x1E ),
};


// - Layer State
LayerStateType LayerState[ LayerNum ];



// ----- Key Positions -----

// -- Physical Key Positions
//
// Index 0: Key 1
// Each key has 6 dimensions
// x,y,z and rx,ry,rz (rotation)
// Units are in mm
const Position Key_Positions[] = {
	PositionEntry( 0.0, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S001 <= x:0,y:0;
	PositionEntry( 19.05, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S002 <= x:19.05,y:0;
	PositionEntry( 38.1, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S003 <= x:38.1,y:0;
	PositionEntry( 57.15, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S004 <= x:57.15,y:0;
	PositionEntry( 76.2, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S005 <= x:76.2,y:0;
	PositionEntry( 95.25, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S006 <= x:95.25,y:0;
	PositionEntry( 114.3, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S007 <= x:114.3,y:0;
	PositionEntry( 133.35, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S008 <= x:133.35,y:0;
	PositionEntry( 152.4, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S009 <= x:152.4,y:0;
	PositionEntry( 171.45, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S010 <= x:171.45,y:0;
	PositionEntry( 190.5, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S011 <= x:190.5,y:0;
	PositionEntry( 209.55, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S012 <= x:209.55,y:0;
	PositionEntry( 228.6, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S013 <= x:228.6,y:0;
	PositionEntry( 247.65, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S014 <= x:247.65,y:0;
	PositionEntry( 266.7, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S015 <= x:266.7,y:0;
	PositionEntry( 285.75, 0.0, 0.0, 0.0, 0.0, 0.0 ), // S016 <= x:285.75,y:0;
	PositionEntry( 4.76, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S017 <= x:4.76,y:-19.05;
	PositionEntry( 27.81, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S018 <= x:27.81,y:-19.05;
	PositionEntry( 46.86, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S019 <= x:46.86,y:-19.05;
	PositionEntry( 65.91, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S020 <= x:65.91,y:-19.05;
	PositionEntry( 84.96, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S021 <= x:84.96,y:-19.05;
	PositionEntry( 104.01, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S022 <= x:104.01,y:-19.05;
	PositionEntry( 123.06, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S023 <= x:123.06,y:-19.05;
	PositionEntry( 142.11, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S024 <= x:142.11,y:-19.05;
	PositionEntry( 161.16, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S025 <= x:161.16,y:-19.05;
	PositionEntry( 180.21, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S026 <= x:180.21,y:-19.05;
	PositionEntry( 199.26, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S027 <= x:199.26,y:-19.05;
	PositionEntry( 218.31, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S028 <= x:218.31,y:-19.05;
	PositionEntry( 237.36, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S029 <= x:237.36,y:-19.05;
	PositionEntry( 260.41, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S030 <= x:260.41,y:-19.05;
	PositionEntry( 285.75, -19.05, 0.0, 0.0, 0.0, 0.0 ), // S031 <= x:285.75,y:-19.05;
	PositionEntry( 7.14, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S032 <= x:7.14,y:-38.10;
	PositionEntry( 33.14, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S033 <= x:33.14,y:-38.10;
	PositionEntry( 52.19, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S034 <= x:52.19,y:-38.10;
	PositionEntry( 71.24, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S035 <= x:71.24,y:-38.10;
	PositionEntry( 90.29, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S036 <= x:90.29,y:-38.10;
	PositionEntry( 109.34, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S037 <= x:109.34,y:-38.10;
	PositionEntry( 128.39, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S038 <= x:128.39,y:-38.10;
	PositionEntry( 147.44, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S039 <= x:147.44,y:-38.10;
	PositionEntry( 166.49, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S040 <= x:166.49,y:-38.10;
	PositionEntry( 185.54, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S041 <= x:185.54,y:-38.10;
	PositionEntry( 204.59, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S042 <= x:204.59,y:-38.10;
	PositionEntry( 223.64, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S043 <= x:223.64,y:-38.10;
	PositionEntry( 0.0, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S044 <= y:-38.10;
	PositionEntry( 254.64, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S045 <= x:254.64,y:-38.10;
	PositionEntry( 285.75, -38.1, 0.0, 0.0, 0.0, 0.0 ), // S046 <= x:285.75,y:-38.10;
	PositionEntry( 11.9, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S047 <= x:11.9,y:-57.15;
	PositionEntry( 0.0, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S048 <= y:-57.15;
	PositionEntry( 42.9, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S049 <= x:42.9,y:-57.15;
	PositionEntry( 61.95, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S050 <= x:61.95,y:-57.15;
	PositionEntry( 81.0, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S051 <= x:81,y:-57.15;
	PositionEntry( 100.05, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S052 <= x:100.05,y:-57.15;
	PositionEntry( 119.1, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S053 <= x:119.1,y:-57.15;
	PositionEntry( 138.15, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S054 <= x:138.15,y:-57.15;
	PositionEntry( 157.2, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S055 <= x:157.2,y:-57.15;
	PositionEntry( 176.25, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S056 <= x:176.25,y:-57.15;
	PositionEntry( 195.3, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S057 <= x:195.3,y:-57.15;
	PositionEntry( 214.35, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S058 <= x:214.35,y:-57.15;
	PositionEntry( 240.35, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S059 <= x:240.35,y:-57.15;
	PositionEntry( 266.7, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S060 <= x:266.7,y:-57.15;
	PositionEntry( 285.75, -57.15, 0.0, 0.0, 0.0, 0.0 ), // S061 <= x:285.75,y:-57.15;
	PositionEntry( 2.38, -76.2, 0.0, 0.0, 0.0, 0.0 ), // S062 <= x:2.38,y:-76.20;
	PositionEntry( 26.1925, -76.2, 0.0, 0.0, 0.0, 0.0 ), // S063 <= x:26.1925,y:-76.20;
	PositionEntry( 50.005, -76.2, 0.0, 0.0, 0.0, 0.0 ), // S064 <= x:50.005,y:-76.20;
	PositionEntry( 121.7975, -76.2, 0.0, 0.0, 0.0, 0.0 ), // S065 <= x:121.7975,y:-76.20;
	PositionEntry( 192.8375, -76.2, 0.0, 0.0, 0.0, 0.0 ), // S066 <= x:192.8375,y:-76.20;
	PositionEntry( 216.65, -76.2, 0.0, 0.0, 0.0, 0.0 ), // S067 <= x:216.65,y:-76.20;
	PositionEntry( 235.7, -76.2, 0.0, 0.0, 0.0, 0.0 ), // S068 <= x:235.7,y:-76.20;
	PositionEntry( 247.65, -76.2, 0.0, 0.0, 0.0, 0.0 ), // S069 <= x:247.65,y:-76.20;
	PositionEntry( 266.7, -76.2, 0.0, 0.0, 0.0, 0.0 ), // S070 <= x:266.7,y:-76.20;
	PositionEntry( 285.75, -76.2, 0.0, 0.0, 0.0, 0.0 ), // S071 <= x:285.75,y:-76.20;
};

