{"_id":"stack-utils","_rev":"6-0402082227e0923b349d2d92b193721b","name":"stack-utils","description":"Captures and cleans stack traces","dist-tags":{"latest":"0.4.0"},"versions":{"0.0.1":{"name":"stack-utils","version":"0.0.1","description":"Captures and cleans stack traces","license":"MIT","repository":{"type":"git","url":"git+https://github.com/jamestalmage/stack-utils.git"},"author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"engines":{"node":">=0.10.0"},"scripts":{"test":"xo && nyc --reporter lcov --reporter text --cache ava --verbose"},"files":["index.js"],"keywords":[],"config":{"nyc":{"exclude":["fixtures/*"]}},"dependencies":{},"devDependencies":{"ava":"^0.8.0","coveralls":"^2.11.6","flatten":"0.0.1","nyc":"^5.2.0","xo":"^0.12.1"},"gitHead":"f0d147cc28c5aacaf6712ea4cdbf8cccfe3ba79c","bugs":{"url":"https://github.com/jamestalmage/stack-utils/issues"},"homepage":"https://github.com/jamestalmage/stack-utils#readme","_id":"stack-utils@0.0.1","_shasum":"5c7f358e79d45dedff43e8affb9fd905b33bd65c","_from":".","_npmVersion":"3.3.12","_nodeVersion":"5.3.0","_npmUser":{"name":"jamestalmage","email":"james@talmage.io"},"dist":{"shasum":"5c7f358e79d45dedff43e8affb9fd905b33bd65c","tarball":"https://registry.npmjs.org/stack-utils/-/stack-utils-0.0.1.tgz"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"}],"directories":{}},"0.1.0":{"name":"stack-utils","version":"0.1.0","description":"Captures and cleans stack traces","license":"MIT","repository":{"type":"git","url":"git+https://github.com/jamestalmage/stack-utils.git"},"author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"engines":{"node":">=0.10.0"},"scripts":{"test":"xo && nyc --reporter lcov --reporter text --cache ava --verbose","test-win":"ava --verbose"},"files":["index.js"],"keywords":[],"config":{"nyc":{"exclude":["fixtures/*"]}},"dependencies":{},"devDependencies":{"ava":"^0.8.0","coveralls":"^2.11.6","flatten":"0.0.1","nyc":"^5.2.0","xo":"^0.12.1"},"gitHead":"772ffe6894b42d450e7aef2fd9a379b822993572","bugs":{"url":"https://github.com/jamestalmage/stack-utils/issues"},"homepage":"https://github.com/jamestalmage/stack-utils#readme","_id":"stack-utils@0.1.0","_shasum":"9b2de559f5d1940c3eb40b480ff8c6d9ff6a1b1b","_from":".","_npmVersion":"3.5.2","_nodeVersion":"0.12.7","_npmUser":{"name":"jamestalmage","email":"james@talmage.io"},"dist":{"shasum":"9b2de559f5d1940c3eb40b480ff8c6d9ff6a1b1b","tarball":"https://registry.npmjs.org/stack-utils/-/stack-utils-0.1.0.tgz"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"}],"directories":{}},"0.2.0":{"name":"stack-utils","version":"0.2.0","description":"Captures and cleans stack traces","license":"MIT","repository":{"type":"git","url":"git+https://github.com/jamestalmage/stack-utils.git"},"author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"engines":{"node":">=0.10.0"},"scripts":{"test":"xo && nyc --reporter lcov --reporter text --cache ava --verbose","test-win":"ava --verbose"},"files":["index.js"],"keywords":[],"config":{"nyc":{"exclude":["fixtures/*"]}},"dependencies":{},"devDependencies":{"ava":"^0.8.0","coveralls":"^2.11.6","flatten":"0.0.1","nyc":"^5.2.0","xo":"^0.12.1"},"gitHead":"64fa2c1f51caaeec57fec4843e8a65a4ed41fd8e","bugs":{"url":"https://github.com/jamestalmage/stack-utils/issues"},"homepage":"https://github.com/jamestalmage/stack-utils#readme","_id":"stack-utils@0.2.0","_shasum":"2e7a45dc67131a0e7bcf472caef3ff1f394b091d","_from":".","_npmVersion":"3.5.2","_nodeVersion":"0.12.7","_npmUser":{"name":"jamestalmage","email":"james@talmage.io"},"dist":{"shasum":"2e7a45dc67131a0e7bcf472caef3ff1f394b091d","tarball":"https://registry.npmjs.org/stack-utils/-/stack-utils-0.2.0.tgz"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"}],"directories":{}},"0.3.0":{"name":"stack-utils","version":"0.3.0","description":"Captures and cleans stack traces","license":"MIT","repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"engines":{"node":">=0.10.0"},"scripts":{"test":"xo && nyc --reporter lcov --reporter text --cache ava --verbose","test-win":"ava --verbose"},"files":["index.js"],"keywords":[],"dependencies":{},"devDependencies":{"ava":"^0.8.0","bluebird":"^3.1.1","coveralls":"^2.11.6","flatten":"0.0.1","nested-error-stacks":"^1.0.2","nyc":"^5.2.0","pify":"^2.3.0","q":"^1.4.1","xo":"^0.12.1"},"gitHead":"cc2fe4c667ddd9e9f11c633e6ef6397d689016be","bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"homepage":"https://github.com/tapjs/stack-utils#readme","_id":"stack-utils@0.3.0","_shasum":"cddc6cec2ed9a5ce65f1ac05c90243b7a0ce325d","_from":".","_npmVersion":"3.5.3","_nodeVersion":"5.3.0","_npmUser":{"name":"jamestalmage","email":"james@talmage.io"},"dist":{"shasum":"cddc6cec2ed9a5ce65f1ac05c90243b7a0ce325d","tarball":"https://registry.npmjs.org/stack-utils/-/stack-utils-0.3.0.tgz"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"}],"directories":{}},"0.4.0":{"name":"stack-utils","version":"0.4.0","description":"Captures and cleans stack traces","license":"MIT","repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"engines":{"node":">=0.10.0"},"scripts":{"test":"xo && nyc --reporter lcov --reporter text --cache ava --verbose","test-win":"ava --verbose"},"files":["index.js"],"keywords":[],"dependencies":{},"devDependencies":{"ava":"^0.8.0","bluebird":"^3.1.1","coveralls":"^2.11.6","flatten":"0.0.1","nested-error-stacks":"^1.0.2","nyc":"^5.2.0","pify":"^2.3.0","q":"^1.4.1","xo":"^0.12.1"},"gitHead":"8701171af041a235bae83a6da4ea516a815bb66a","bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"homepage":"https://github.com/tapjs/stack-utils#readme","_id":"stack-utils@0.4.0","_shasum":"940cb82fccfa84e8ff2f3fdf293fe78016beccd1","_from":".","_npmVersion":"3.5.3","_nodeVersion":"5.4.1","_npmUser":{"name":"jamestalmage","email":"james@talmage.io"},"dist":{"shasum":"940cb82fccfa84e8ff2f3fdf293fe78016beccd1","tarball":"https://registry.npmjs.org/stack-utils/-/stack-utils-0.4.0.tgz"},"maintainers":[{"name":"jamestalmage","email":"james@talmage.io"}],"_npmOperationalInternal":{"host":"packages-6-west.internal.npmjs.com","tmp":"tmp/stack-utils-0.4.0.tgz_1454711753671_0.9951272297184914"},"directories":{}}},"readme":"# stack-utils \n\n> Captures and cleans stack traces.\n\n[![Linux Build](https://travis-ci.org/tapjs/stack-utils.svg?branch=master)](https://travis-ci.org/tapjs/stack-utils) [![Build status](https://ci.appveyor.com/api/projects/status/fb9i157knoixe3iq/branch/master?svg=true)](https://ci.appveyor.com/project/jamestalmage/stack-utils-oiw96/branch/master)  [![Coverage](https://coveralls.io/repos/tapjs/stack-utils/badge.svg?branch=master&service=github)](https://coveralls.io/github/tapjs/stack-utils?branch=master)\n\n\nExtracted from `lib/stack.js` in the [`node-tap` project](https://github.com/tapjs/node-tap)\n\n## Install\n\n```\n$ npm install --save stack-utils\n```\n\n\n## Usage\n\n```js\nconst StackUtils = require('stack-utils');\nconst stack = new StackUtils({cwd: process.cwd(), internals: StackUtils.nodeInternals()});\n\nconsole.log(stack.clean(new Error().stack));\n// outputs a beutified stack trace\n```\n\n\n## API\n\n\n### new StackUtils([options])\n\nCreates a new `stackUtils` instance.\n\n#### options\n\n##### internals\n\nType: `array` of `RegularExpression`s  \n\nA set of regular expressions that match internal stack stack trace lines which should be culled from the stack trace.\n`StackUtils.nodeInternals()` returns a relatively set of sensible defaults for use on the node platform.\n\n##### cwd\n\nType: `string`\n\nThe path to the current working directory. File names in the stack trace will be shown relative to this directory.\n\n\n### StackUtils.nodeInternals()\n\nReturns an array of regular expressions that be used to cull lines from the stack trace that reference common Node.js internal files.\n\n\n### stackUtils.clean(stack)\n\nCleans up a stack trace by deleting any lines that match the `internals` passed to the constructor, and shortening file names relative to `cwd`.\n\nReturns a `string` with the cleaned up stack (always terminated with a `\\n` newline character).\n\n#### stack\n\n*Required*  \nType: `string` or an `array` of `string`s\n\n\n### stackUtils.capture([limit], [startStackFunction])\n\nCaptures the current stack trace, returning an array of `CallSite`s. There are good overviews of the available CallSite methods [here](https://github.com/v8/v8/wiki/Stack%20Trace%20API#customizing-stack-traces), and [here](https://github.com/sindresorhus/callsites#api).\n\n#### limit\n\nType: `number`\nDefault: `Infinity`\n\nLimits the number of lines returned by dropping all lines in excess of the limit. This removes lines from the stack trace.\n\n#### startStackFunction\n\nType: `function`\n\nThe function where the stack trace should start. The first line of the stack trace will be the function that called `startStackFunction`. This removes lines from the end of the stack trace.\n\n\n### stackUtils.captureString([limit], [startStackFunction])\n\nCaptures the current stack trace, cleans it using `stackUtils.clean(stack)`, and returns a string with the cleaned stack trace. It takes the same arguments as `stackUtils.capture`.\n\n\n### stackUtils.at([startStackFunction])\n\nCaptures the first line of the stack trace (or the first line after `startStackFunction` if supplied), and returns a `CallSite` like object that is serialization friendly (properties are actual values instead of getter functions). \n\nThe available properties are:\n\n - `line`: `number` \n - `column`: `number`\n - `file`: `string`\n - `constructor`: `boolean`\n - `evalOrigin`: `string`\n - `native`: `boolean`\n - `typename`: `string`\n - `function`: `string`\n - `method`: `string`\n\n### stackUtils.parseLine(line)\n\nParses a `string` (which should be a single line from a stack trace), and generates an object with the following properties:\n\n - `line`: `number` \n - `column`: `number`\n - `file`: `string`\n - `constructor`: `boolean`\n - `evalOrigin`: `string`\n - `evalLine`: `number`\n - `evalColumn`: `number`\n - `evalFile`: `string`\n - `native`: `boolean`\n - `function`: `string`\n - `method`: `string`\n\n\n## License\n\nMIT © [Isaac Z. Schlueter](http://github.com/isaacs), [James Talmage](http://github.com/jamestalmage)\n","maintainers":[{"name":"jamestalmage","email":"james@talmage.io"}],"time":{"modified":"2016-02-05T22:35:56.320Z","created":"2016-01-04T05:15:37.432Z","0.0.1":"2016-01-04T05:15:37.432Z","0.1.0":"2016-01-07T20:24:53.362Z","0.2.0":"2016-01-07T21:19:49.097Z","0.3.0":"2016-01-14T03:54:58.328Z","0.4.0":"2016-02-05T22:35:56.320Z"},"homepage":"https://github.com/tapjs/stack-utils#readme","keywords":[],"repository":{"type":"git","url":"git+https://github.com/tapjs/stack-utils.git"},"author":{"name":"James Talmage","email":"james@talmage.io","url":"github.com/jamestalmage"},"bugs":{"url":"https://github.com/tapjs/stack-utils/issues"},"license":"MIT","readmeFilename":"readme.md","users":{"timdp":true},"_attachments":{},"_etag":"\"43NEW19S5NGA2BACMUTH5CC80\""}